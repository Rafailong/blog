"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[585],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=s(n),f=a,d=m["".concat(p,".").concat(f)]||m[f]||u[f]||o;return n?r.createElement(d,l(l({ref:t},c),{},{components:n})):r.createElement(d,l({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9036:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return s},assets:function(){return c},toc:function(){return u},default:function(){return f}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),l=["components"],i={slug:"dollar-sign-operator",title:"haskell dollar-sign operator",authors:["ravila"],tags:["haskell"]},p=void 0,s={permalink:"/blog/dollar-sign-operator",editUrl:"https://github.com/Rafailong/blog/tree/main/docs/blog/2021-12-27-dollar-sign-operator.md",source:"@site/blog/2021-12-27-dollar-sign-operator.md",title:"haskell dollar-sign operator",description:"The ($) operator is a convenience for when you want to express",date:"2021-12-27T00:00:00.000Z",formattedDate:"December 27, 2021",tags:[{label:"haskell",permalink:"/blog/tags/haskell"}],readingTime:.74,truncated:!1,authors:[{name:"Rafael Avila",url:"https://github.com/Rafailong",imageURL:"https://github.com/Rafailong.png",key:"ravila"}],prevItem:{title:"sorted squared array",permalink:"/blog/sorted-squared-array"},nextItem:{title:"Welcome",permalink:"/blog/welcome"}},c={authorsImageUrls:[void 0]},u=[],m={toc:u};function f(e){var t=e.components,n=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"($)")," operator is a convenience for when you want to express\nsomething with less pairs of parenths."),(0,o.kt)("p",null,"Type of ",(0,o.kt)("inlineCode",{parentName:"p"},"($)")," is:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-haskell"},"($) :: (a -> b) -> a -> b -- Defined in \u2018GHC.Base\u2019\ninfixr 0 $\n")),(0,o.kt)("p",null,"Which means that:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"it is a infix operator"),(0,o.kt)("li",{parentName:"ol"},"it associates to the right"),(0,o.kt)("li",{parentName:"ol"},"and, it has the lowest possibile precedence")),(0,o.kt)("p",null,"Usage example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-haskell"},"_ =(2^) (2 + 2) -- 16\n")),(0,o.kt)("p",null,"Above code we need all the parenths because we want to first evaluate\n",(0,o.kt)("inlineCode",{parentName:"p"},"(2 + 2)"),". If we remove the parenths the result is different:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-haskell"},"_ = (2^) 2 + 2 -- 6\n")),(0,o.kt)("p",null,"Here is where ",(0,o.kt)("inlineCode",{parentName:"p"},"($)")," comes handy:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-haskell"},"_ = (2^) $ 2 + 2 -- 16\n")),(0,o.kt)("p",null,"This happens because of how ",(0,o.kt)("inlineCode",{parentName:"p"},"($)")," associates.\nSo, first ",(0,o.kt)("inlineCode",{parentName:"p"},"(2 + 2)")," is evaluted and its results is used in ",(0,o.kt)("inlineCode",{parentName:"p"},"(2^)"),"."))}f.isMDXComponent=!0}}]);