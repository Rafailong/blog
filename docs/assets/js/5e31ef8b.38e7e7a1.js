"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[1590],{8215:function(e,t,a){a.d(t,{Z:function(){return n}});var r=a(7294);function n(e){var t=e.children,a=e.hidden,n=e.className;return r.createElement("div",{role:"tabpanel",hidden:a,className:n},t)}},9877:function(e,t,a){a.d(t,{Z:function(){return c}});var r=a(3117),n=a(7294),l=a(2389),o=a(8472),i=a(6010),u="tabItem_LplD";function s(e){var t,a,l,s=e.lazy,c=e.block,d=e.defaultValue,m=e.values,f=e.groupId,p=e.className,v=n.Children.map(e.children,(function(e){if((0,n.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=m?m:v.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),h=(0,o.lx)(g,(function(e,t){return e.value===t.value}));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var b=null===d?d:null!=(t=null!=d?d:null==(a=v.find((function(e){return e.props.default})))?void 0:a.props.value)?t:null==(l=v[0])?void 0:l.props.value;if(null!==b&&!g.some((function(e){return e.value===b})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+b+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var y=(0,o.UB)(),k=y.tabGroupChoices,w=y.setTabGroupChoices,T=(0,n.useState)(b),E=T[0],x=T[1],q=[],N=(0,o.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var Z=k[f];null!=Z&&Z!==E&&g.some((function(e){return e.value===Z}))&&x(Z)}var D=function(e){var t=e.currentTarget,a=q.indexOf(t),r=g[a].value;r!==E&&(N(t),x(r),null!=f&&w(f,r))},I=function(e){var t,a=null;switch(e.key){case"ArrowRight":var r=q.indexOf(e.currentTarget)+1;a=q[r]||q[0];break;case"ArrowLeft":var n=q.indexOf(e.currentTarget)-1;a=q[n]||q[q.length-1]}null==(t=a)||t.focus()};return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":c},p)},g.map((function(e){var t=e.value,a=e.label,l=e.attributes;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:E===t?0:-1,"aria-selected":E===t,key:t,ref:function(e){return q.push(e)},onKeyDown:I,onFocus:D,onClick:D},l,{className:(0,i.Z)("tabs__item",u,null==l?void 0:l.className,{"tabs__item--active":E===t})}),null!=a?a:t)}))),s?(0,n.cloneElement)(v.filter((function(e){return e.props.value===E}))[0],{className:"margin-vert--md"}):n.createElement("div",{className:"margin-vert--md"},v.map((function(e,t){return(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==E})}))))}function c(e){var t=(0,l.Z)();return n.createElement(s,(0,r.Z)({key:String(t)},e))}},9529:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return d}});var r=a(3117),n=a(102),l=(a(7294),a(3905)),o=(a(254),a(9877),a(8215),["components"]),i={slug:"sorted-squared-array",title:"sorted squared array",authors:["ravila"],tags:["algo","kotlin"]},u=void 0,s={permalink:"/blog/sorted-squared-array",editUrl:"https://github.com/Rafailong/blog/tree/main/docs/blog/2022-01-03-sorted-squared-array/index.mdx",source:"@site/blog/2022-01-03-sorted-squared-array/index.mdx",title:"sorted squared array",description:"this time we will try to (satisfactory) solve a coding challenge.",date:"2022-01-03T00:00:00.000Z",formattedDate:"January 3, 2022",tags:[{label:"algo",permalink:"/blog/tags/algo"},{label:"kotlin",permalink:"/blog/tags/kotlin"}],readingTime:1.61,truncated:!0,authors:[{name:"Rafael Avila",url:"https://github.com/Rafailong",imageURL:"https://github.com/Rafailong.png",key:"ravila"}],frontMatter:{slug:"sorted-squared-array",title:"sorted squared array",authors:["ravila"],tags:["algo","kotlin"]},prevItem:{title:"add two number",permalink:"/blog/add-two-numbers"},nextItem:{title:"haskell dollar-sign operator",permalink:"/blog/dollar-sign-operator"}},c={authorsImageUrls:[void 0]},d=[{value:"description",id:"description",level:3}],m={toc:d};function f(e){var t=e.components,a=(0,n.Z)(e,o);return(0,l.kt)("wrapper",(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"this time we will try to (satisfactory) solve a coding challenge."),(0,l.kt)("h3",{id:"description"},"description"),(0,l.kt)("p",null,"write a function that takes in a non-empty array of integers that are sorted\nin ascending order and returns a new array of the same length with the squares\nof the original integers also sorted in ascending order."))}f.isMDXComponent=!0}}]);