"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[477],{10:function(e){e.exports=JSON.parse('{"blogPosts":[{"id":"dollar-sign-operator","metadata":{"permalink":"/blog/dollar-sign-operator","editUrl":"https://github.com/Rafailong/blog/tree/main/docs/blog/2021-12-27-dollar-sign-operator.md","source":"@site/blog/2021-12-27-dollar-sign-operator.md","title":"haskell dollar-sign operator","description":"The ($) operator is a convenience for when you want to express","date":"2021-12-27T00:00:00.000Z","formattedDate":"December 27, 2021","tags":[{"label":"haskell","permalink":"/blog/tags/haskell"}],"readingTime":0.74,"truncated":false,"authors":[{"name":"Rafael Avila","url":"https://github.com/Rafailong","imageURL":"https://github.com/Rafailong.png","key":"ravila"}],"nextItem":{"title":"Welcome","permalink":"/blog/welcome"}},"content":"The `($)` operator is a convenience for when you want to express\\nsomething with less pairs of parenths.\\n\\nType of `($)` is:\\n\\n``` haskell\\n($) :: (a -> b) -> a -> b -- Defined in \u2018GHC.Base\u2019\\ninfixr 0 $\\n```\\n\\nWhich means that:\\n\\n1.  it is a infix operator\\n2.  it associates to the right\\n3.  and, it has the lowest possibile precedence\\n\\nUsage example:\\n\\n```haskell\\n_ =(2^) (2 + 2) -- 16\\n```\\n\\nAbove code we need all the parenths because we want to first evaluate\\n`(2 + 2)`. If we remove the parenths the result is different:\\n\\n```haskell\\n_ = (2^) 2 + 2 -- 6\\n```\\n\\nHere is where `($)` comes handy:\\n\\n```haskell\\n_ = (2^) $ 2 + 2 -- 16\\n```\\n\\nThis happens because of how `($)` associates.\\nSo, first `(2 + 2)` is evaluted and its results is used in `(2^)`."},{"id":"welcome","metadata":{"permalink":"/blog/welcome","editUrl":"https://github.com/Rafailong/blog/tree/main/docs/blog/2021-12-25-welcome.md","source":"@site/blog/2021-12-25-welcome.md","title":"Welcome","description":"Hi there and welcome to my blog!","date":"2021-12-25T00:00:00.000Z","formattedDate":"December 25, 2021","tags":[],"readingTime":0.19,"truncated":false,"authors":[{"name":"Rafael Avila","url":"https://github.com/Rafailong","imageURL":"https://github.com/Rafailong.png","key":"ravila"}],"prevItem":{"title":"haskell dollar-sign operator","permalink":"/blog/dollar-sign-operator"}},"content":"Hi there and welcome to my blog!\\n\\nAt a glance you will find content about things I like,\\nthings I dislike, and things I might be learning/interested on.\\n\\nSo, that is all for now. Have a good one!"}]}')}}]);